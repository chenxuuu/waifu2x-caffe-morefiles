<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAABsAAAAAAAAAAAAAAAAAAAAA
        AABc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1Fn1EuajYuajYuajYuajYuajYu
        ajYuazc3f0Fc1G1b02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c1G1OtV0ydjwwbzkwbjkvbDgvbDcvbDgw
        bjkwcDkwcDlNsltc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAQERKBRc1G1b02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c
        1G1AlEwIFAoCBgMCBgMBAwIBAgEBAwECBgMDCAQFDgc/kktc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIxJc1G1b
        02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c1G0/kUoECwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEQlAlExc
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAPIxJc1G1b02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c1G0/kUoECgUAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHEAlAk0xc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIxJc1G1b0mxb02xc1G1c1G1c
        1G1c1G1c1G1c1G1c1G0+kEoDBwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDQc/kktc1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPIxJc1G1b02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c1G0+j0kCBQIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAECgU/kUpc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEQkuajYvbTgvbjgwbzkwcDkxcToxcDowcDkwbzkv
        bTggSiYBAwEAAAAAAAAAAAAAAAAAAAAAAAAAAAADBwQ+kEpc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        BAICBQMDBgMDCAQECgUECAQDCAQCBgMCBQIBAwEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQI+j0lc
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAwE9jklc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBgM+j0lc1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADCQQ+kUpc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDAY/kktc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDwc/k0tc
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0uajYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHEQlAlExc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G01ez8PIxIPIxIPIxIPIxIPIxIPIxIPIxIMHQ8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACBQMPIxIPIxIPIxIPIxIPIxIPIxIPIxIVMhlEn1Fc1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1MsFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIxJc1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1MsFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPIxJc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1MsFoAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgESKRVc1G1b02xb02xb02xb02xc1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1MsFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBQIVMRlc1G1b
        02xb02xb02xb02xc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1MsFoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACBwMWNRtc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1MsVsAAgAAAgEAAQAAAQAAAAAAAAAAAAAAAQAAAQAAAgEDCAQWMxpc1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1NslsFDQYFDQYECQUDBwMCBQIBAwECBgMDCAQECgUG
        DQcGDQcTLBdc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1ZzmpNsltN
        sltNsltNsVtNsVtMsVtMsVtNsltNsltNsltNslxPuF5c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G0/kUoiTigjUCkiTighTCcgSyYgSSUfSCUf
        SCUgSiYhTCchTSciTigkUiovbThc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1SvmIkVSsj
        UCkhTighTScgSycgSSUgSSUfSCUfSiYgSychTCchTSciUCknXC9KrFhc1G1c1G1c1G1c1G1c1G1c1G0x
        cToFDAYDBwMCBQMCBAIBAwEBAgEAAQAAAQABAgEBBAICBQICBgMECwUWNBpc1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1Ns1wHEQgDCAQCBQICBAIBAwIBAgEBAgEAAQEAAgEBAwICBAICBQIDBwMJ
        FgtAlUxc1G1c1G1c1G1c1G1c1G1c1G0yczsFDAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABBAITLRdc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1NslsFDAYAAgEAAAAAAAAAAAAA
        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
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1Sv2IlVSwjUioiTyghTScgSycfSiYfSCUfSCUfSSYg
        SyYhTSchTighTyglVixJqldc1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c1G1c
        1G1c1G1c1G1c1G1c1G0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>